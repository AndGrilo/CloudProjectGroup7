openapi: "3.0.2"
info:
  title: "Steam Games and Reviews"
  version: "2.0"

servers:
  - url: "http://0.0.0.0:5000"

paths:
  ######SEARCHES######
  /searches/games:
    get:
      tags:
        - searches
      summary: "Search multiple games"
      description: "Search games with specific filters"
      operationId: GameSearch
      parameters:
        - in: query
          name: types
          schema:
            type: string
        - in: query
          name: name
          schema:
            type: string
        - in: query
          name: release_date
          schema:
            type: string
        - in: query
          name: developer
          schema:
            type: string
        - in: query
          name: publisher
          schema:
            type: string
        - in: query
          name: popular_tags
          schema:
            type: string
        - in: query
          name: languages
          schema:
            type: string
        - in: query
          name: genre
          schema:
            type: string
        - in: query
          name: original_price
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Game'
        "404":
          description: Not found response
          content:
            text/plain:
              schema:
                title: Game not found
                type: string
                example: Not found
        '500':
          description: Server Error
  /searches/game:
    get:
      tags:
        - searches
      summary: "Get game information from URL"
      description: "Get specific game data with the game URL"
      operationId: GameSearchFromID
      parameters:
        - in: query
          name: id
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Game'
        "404":
          description: Not found response
          content:
            text/plain:
              schema:
                title: Game not found
                type: string
                example: Not found
        '500':
          description: Server Error
  /searches/reviews:
    get:
      tags:
        - searches
      summary: "Search multiple reviews"
      description: "Search all reviews using filters"
      operationId: ReviewSearch
      parameters:
        - in: query
          name: app_name
          schema:
            type: string
        - in: query
          name: timestamp_created
          schema:
            type: string
        - in: query
          name: recommended
          schema:
            type: string
        - in: query
          name: votes_helpful
          schema:
            type: string
        - in: query
          name: votes_funny
          schema:
            type: string
        - in: query
          name: comment_count
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Review'
        "404":
          description: Not found response
          content:
            text/plain:
              schema:
                title: Review not found
                type: string
                example: Not found
        '500':
          description: Server Error
  /searches/review:
    get:
      tags:
        - searches
      summary: "Get review from id"
      description: "Get specific review with the review id"
      operationId: ReviewSearchFromID
      parameters:
        - in: query
          name: id
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
        "404":
          description: Review not found
          content:
            text/plain:
              schema:
                title: Review not found
                type: string
                example: Not found
        '500':
          description: Server Error
  ######SUGESTIONS######
  /suggestions/games:
    get:
      tags:
        - suggestions
      summary: "Call personalized top 10 games"
      description: "Return personalized top 10 games on Steam"
      operationId: BestGamesByFilters
      parameters:
        - $ref: '#/components/parameters/release_date'
        - $ref: '#/components/parameters/developer'
        - $ref: '#/components/parameters/popular_tags'
        - $ref: '#/components/parameters/genre'
        - $ref: '#/components/parameters/original_price'
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Game'
        "404":
          description: Not found response
          content:
            text/plain:
              schema:
                title: Games not found
                type: string
                example: Not found
        '500':
          description: Server Error
  /suggestions/reviews:
    get:
      tags:
        - suggestions
      summary: "Call personalized top 10 reviews of a given game"
      description: "Return personalized top 10 reviews of a given game on Steam"
      operationId: BestGameReviewsByFilters
      parameters:
        - $ref: '#/components/parameters/app_name'
        - $ref: '#/components/parameters/maxResults'
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Review'
        "404":
          description: Not found response
          content:
            text/plain:
              schema:
                title: Reviews not found
                type: string
                example: Not found
        '500':
          description: Server Error
  ######USERS######
  /user:
    post:
      tags:
        - user
      summary: 'User register'
      description: 'Allows the user to register'
      operationId: AddUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserAdd'
      responses:
        '204':
          description: User created
        '404':
          description: Not found
    put:
      summary: 'User edit account'
      description: 'Enables the users to edit their accounts'
      operationId: EditUser
      parameters:
        - in: header
          name: token
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserEdit'
      responses:
        '204':
          description: User info updated
        '404':
          description: Not found
      tags:
        - user
  /user/login:
    post:
      summary: 'Users login'
      description: 'Enables already registered users to login'
      operationId: UserLogin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLogin'
      responses:
        '204':
          description: Token
        '404':
          description: Not found
        '500':
          description: Server Error
      tags:
        - user
  /user/logout:
    get:
      summary: Users logout
      description: 'Enables users to logout'
      operationId: UserLogout
      responses:
        '204':
          description: Successful logout
        '404':
          description: User not found
        '500':
          description: Server Error
      tags:
        - user
  ######LIBRARY######
  /library:
    get:
      tags:
        - library
      summary: "List all games in your library"
      operationId: getGame
      parameters:
        - in: header
          name: token
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Game'
        "404":
          description: Not found response
          content:
            text/plain:
              schema:
                title: Library not found
                type: string
                example: Not found
        "500":
          description: Error
          content:
            text/plain:
              schema:
                title: Error
                type: string
                example: Internal Server Error
    post:
      tags:
        - library
      summary: "Add a game to your library"
      operationId: AddGame
      parameters:
        - in: query
          name: id
          schema:
            type: string
        - in: header
          name: token
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
        "404":
          description: Game not found
          content:
            text/plain:
              schema:
                title: Game not found
                type: string
                example: Not found
        "500":
          description: Error
          content:
            text/plain:
              schema:
                title: Error
                type: string
                example: Internal Server Error
    delete:
      tags:
        - library
      summary: "Remove a game in your library"
      operationId: DelGame
      parameters:
        - in: header
          name: token
          required: true
          schema:
            type: string
        - in: query
          name: id
          schema:
            type: string
      responses:
        "204":
          description: Successful response
        "404":
          description: Game not found
          content:
            text/plain:
              schema:
                title: Game not found
                type: string
                example: Not found
        "500":
          description: Error
          content:
            text/plain:
              schema:
                title: Error
                type: string
                example: Internal Server Error
  ######REVIEWS######
  /reviews:
    post:
      tags:
        - reviews
      summary: "Create review"
      operationId: add_review
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Review'
      responses:
        "200":
          description: Review added
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                  description:
                    type: string
        "400":
          description: Review already exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                  description:
                    type: string
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                  description:
                    type: string
    get:
      tags:
        - reviews
      summary: "Get reviews list"
      operationId: list_reviews
      parameters:
        - name: maxResults
          in: query
          required: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Reviews list returned successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Review'
        "404":
          description: Review not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                  description:
                    type: string
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                  description:
                    type: string
  /reviews/{review_id}:
    get:
      tags:
        - reviews
      summary: "Get review"
      operationId: get_review
      parameters:
        - name: review_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Review returned successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Review'
        "404":
          description: Review not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                  description:
                    type: string
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                  description:
                    type: string
    put:
      tags:
        - reviews
      summary: "Update review"
      operationId: update_review
      parameters:
        - name: review_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Review'
      responses:
        "200":
          description: Review updated successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Review'
        "404":
          description: Review not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                  description:
                    type: string
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                  description:
                    type: string
    delete:
      tags:
        - reviews
      summary: "Delete review"
      operationId: delete_review
      parameters:
        - name: review_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "204":
          description: Review deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                  description:
                    type: string
        "404":
          description: Review not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                  description:
                    type: string
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                  description:
                    type: string
  ######WISHLIST######
  /wishes:
    get:
      tags:
        - wishes
      summary: "List all games in your wishlist"
      operationId: GetGameWish
      parameters:
        - in: header
          name: token
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Game'
        "404":
          description: Wishlist not found
          content:
            text/plain:
              schema:
                title: Wishlist not found
                type: string
                example: Not found
        "500":
          description: Error
          content:
            text/plain:
              schema:
                title: Error
                type: string
                example: Internal Server Error
    post:
      tags:
        - wishes
      summary: "Add a game to your wish list"
      operationId: AddGame_wish
      parameters:
        - in: header
          name: token
          required: true
          schema:
            type: string
        - in: query
          name: id
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Game'
        "404":
          description: Wishlist or Game not found
          content:
            text/plain:
              schema:
                title: Wishlist or Game not found
                type: string
                example: Not found
        "500":
          description: Error
          content:
            text/plain:
              schema:
                title: Error
                type: string
                example: Internal Server Error
    delete:
      tags:
        - wishes
      summary: "Delete a game from your wishlist"
      operationId: DelGame_wish
      parameters:
        - in: header
          name: token
          required: true
          schema:
            type: string
        - in: query
          name: id
          schema:
            type: string
      responses:
        "204":
          description: Game removed from wishlist
        "404":
          description: Not found response
          content:
            text/plain:
              schema:
                title: Game or wishlist not found
                type: string
                example: Not found
        "500":
          description: Error
          content:
            text/plain:
              schema:
                title: Error
                type: string
                example: Internal Server Error
  #########ADMIN#########
  /admin/games:
    post:
      tags:
        - admin
      summary: Add game
      description: Add a new game
      operationId: addGame
      parameters:
        - in: header
          name: token
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Game'
      responses:
        '200':
          description: Game added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Game'
        '401':
          $ref: '#/components/responses/Unauthorized'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
    put:
      tags:
        - admin
      summary: Update game
      description: Updated a new game
      operationId: UpdateGame
      parameters:
        - in: header
          name: token
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Game'
      responses:
        '200':
          description: Game updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Game'
        '401':
          $ref: '#/components/responses/Unauthorized'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
    delete:
      tags:
        - admin
      summary: Delete game from URL
      description: Deletes a single game based on the URL supplied
      operationId: deleteGame
      parameters:
        - in: header
          name: token
          required: true
          schema:
            type: string
        - name: url
          in: query
          description: URL of the game to delete
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Game deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
  /admin/users:
    delete:
      tags:
        - admin
      summary: Delete user
      description: Deletes a single user based on the id supplied
      operationId: deleteUser
      parameters:
        - in: header
          name: token
          required: true
          schema:
            type: string
        - name: id
          in: query
          description: id of the user to delete
          required: true
          schema:
            type: string
      responses:
        '204':
          description: User deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
tags:
  - name: user
    description: "User operations"
  - name: searches
    description: "Search Game or Reviews"
  - name: admin
    description: Administrative Operations
  - name: library
    description: "Edit your library"
  - name: reviews
    description: "Edit your reviews"
  - name: wishes
    description: "Edit your wish list"
  - name: suggestions
    description: "Get Suggestions"

externalDocs:
  description: GitHub
  url: https://github.com/mdmourao/CloudProject

components:
  responses:
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Response'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Response'
  parameters:
    maxResults:
      name: maxResults
      in: query
      description: Max Results of the query
      example: 10
      schema:
        type: number
    token:
      name: token
      in: query
      description: User token
      example: 'ljkdfnv0293asd4asd78asdasdha29347nv297'
      schema:
        type: string
    review_id:
      name: review_id
      in: query
      description: The unique id of the review
      example: 85184605
      schema:
        type: number
    app_id:
      name: app_id
      in: query
      description: The unique id of the app (game)
      example: 292030
      schema:
        type: number
    app_name:
      name: app_name
      in: query
      description: The name of the app (game)
      example: 'The Witcher 3: Wild Hunt'
      schema:
        type: string
    language:
      name: language
      in: query
      description: Language the user indicated when authoring the review
      example: 'english'
      schema:
        type: string
    review:
      name: review
      in: query
      description: Text of written review
      example: 'One of the best RPGs of all time, worthy of any collection'
      schema:
        type: string
    timestamp_created:
      name: timestamp_created
      in: query
      description: Date the review was created (unix timestamp)
      example: 1611379970
      schema:
        type: number
    timestamp_updated:
      name: timestamp_updated
      in: query
      description: Date the review was last updated (unix timestamp)
      example: 1611379970
      schema:
        type: number
    recommended:
      name: recommended
      in: query
      description: TRUE if the user recommends the game
      example: true
      schema:
        type: boolean
    votes_helpful:
      name: votes_helpful
      in: query
      description: The number of users that found this review helpful
      example: 0
      schema:
        type: number
    votes_funny:
      name: votes_funny
      in: query
      description: The number of users that found this review funny
      example: 0
      schema:
        type: number
    weighted_vote_score:
      name: weighted_vote_score
      in: query
      description: Helpfulness score
      example: 0.0
      schema:
        type: number
    comment_count:
      name: comment_count
      in: query
      description: Number of comments posted on this review
      example: 0
      schema:
        type: number
    steam_purchase:
      name: steam_purchase
      in: query
      description: TRUE if the user purchased the game on Steam
      example: true
      schema:
        type: boolean
    received_for_free:
      name: received_for_free
      in: query
      description: TRUE if the user checked a box saying they got the app for free
      example: false
      schema:
        type: boolean
    written_during_early_access:
      name: written_during_early_access
      in: query
      description: TRUE if the user posted this review while the game was in Early Access
      example: false
      schema:
        type: boolean
    author_steamid:
      name: author_steamid
      in: query
      description: The user’s SteamID
      example: 76561199054755373
      schema:
        type: number
    author_num_games_owned:
      name: author_num_games_owned
      in: query
      description: Number of games owned by the user
      example: 5
      schema:
        type: number
    author_num_reviews:
      name: author_num_reviews
      in: query
      description: Number of reviews written by the user
      example: 3
      schema:
        type: number
    author_playtime_forever:
      name: author_playtime_forever
      in: query
      description: Lifetime playtime tracked
      example: 5587.0
      schema:
        type: number
    author_playtime_last_two_weeks:
      name: author_playtime_last_two_weeks
      in: query
      description: Playtime tracked in the past two weeks
      example: 3200.0
      schema:
        type: number
    author_playtime_at_review:
      name: author_playtime_at_review
      in: query
      description: Playtime when the review was written
      example: 5524.0
      schema:
        type: number
    author_last_played:
      name: author_last_played
      in: query
      description: Time for when the user last played
      example: 1611383744.0
      schema:
        type: number
    url:
      name: url
      in: query
      description: URL to the game on the steam store
      example: 'https://store.steampowered.com/app/379720/DOOM/'
      schema:
        type: string
    types:
      name: types
      in: query
      description: Type of the product
      example: 'app'
      schema:
        type: string
    name:
      name: name
      in: query
      description: Name of the game
      example: 'DOOM'
      schema:
        type: string
    desc_snippet:
      name: desc_snippet
      in: query
      description: Description of the game
      example: 'Now includes all three premium DLC packs (Unto the Evil, Hell Followed, and Bloodfall), maps, modes, and weapons, as well as all feature updates including Arcade Mode, Photo Mode, and the latest Update 6.66, which brings further multiplayer improvements as well as revamps multiplayer progression.'
      schema:
        type: string
    recent_reviews:
      name: recent_reviews
      in: query
      description: Recent reviews of the game
      example: 'Very Positive,(554),- 89% of the 554 user reviews in the last 30 days are positive.'
      schema:
        type: string
    all_reviews:
      name: all_reviews
      in: query
      description: All reviews of the game
      example: 'Very Positive,(42,550),- 92% of the 42,550 user reviews for this game are positive.'
      schema:
        type: string
    release_date:
      name: release_date
      in: query
      description: Date of release
      example: 'May 12, 2016'
      schema:
        type: string
    developer:
      name: developer
      in: query
      description: Developer name
      example: 'id Software'
      schema:
        type: string
    publisher:
      name: publisher
      in: query
      description: Publisher name
      example: 'Bethesda Softworks,Bethesda Softworks'
      schema:
        type: string
    popular_tags:
      name: popular_tags
      in: query
      description: All tags of the game
      example: 'FPS,Gore,Action,Demons,Shooter,First-Person,Great Soundtrack,Multiplayer,Singleplayer,Fast-Paced,Sci-fi,Horror,Classic,Atmospheric,Difficult,Blood,Remake,Zombies,Co-op,Memes'
      schema:
        type: string
    game_details:
      name: game_details
      in: query
      description: Game details
      example: 'Single-player,Multi-player,Co-op,Steam Achievements,Steam Trading Cards,Partial Controller Support,Steam Cloud'
      schema:
        type: string
    languages:
      name: languages
      in: query
      description: All supported languages
      example: 'English,French,Italian,German,Spanish - Spain,Japanese,Polish,Portuguese - Brazil,Russian,Traditional Chinese'
      schema:
        type: string
    achievements:
      name: achievements
      in: query
      description: Total number of achievements
      example: 54
      schema:
        type: number
    genre:
      name: genre
      in: query
      description: Game genre
      example: 'Action'
      schema:
        type: string
    game_description:
      name: game_description
      in: query
      description: Description of the game
      example: 'About This Game Developed by id software, the studio that pioneered the first-person shooter genre and created multiplayer Deathmatch, DOOM returns as a brutally fun and challenging modern-day shooter experience. Relentless demons, impossibly destructive guns, and fast, fluid movement provide the foundation for intense, first-person combat – whether you’re obliterating demon hordes through the depths of Hell in the single-player campaign, or competing against your friends in numerous multiplayer modes. Expand your gameplay experience using DOOM SnapMap game editor to easily create, play, and share your content with the world. STORY: You’ve come here for a reason.'
      schema:
        type: string
    mature_content:
      name: mature_content
      in: query
      description: Mature Content Description
      example: 'The developers describe the content like this:  This Game may contain content not appropriate for all ages, or may not be appropriate for viewing at work: Frequent Violence or Gore, General Mature Content'
      schema:
        type: string
    minimum_requirements:
      name: minimum_requirements
      in: query
      description: Specification of minimum requirements
      example: 'Minimum:,OS:,Windows 7/8.1/10 (64-bit versions),Processor:,Intel Core i5-2400/AMD FX-8320 or better,Memory:,8 GB RAM,Graphics:,NVIDIA GTX 670 2GB/AMD Radeon HD 7870 2GB or better,Storage:,55 GB available space,Additional Notes:,Requires Steam activation and broadband internet connection for Multiplayer and SnapMap'
      schema:
        type: string
    recommended_requirements:
      name: recommended_requirements
      in: query
      description: Specification of recommended requirements
      example: 'Recommended:,OS:,Windows 7/8.1/10 (64-bit versions),Processor:,Intel Core i7-3770/AMD FX-8350 or better,Memory:,8 GB RAM,Graphics:,NVIDIA GTX 970 4GB/AMD Radeon R9 290 4GB or better,Storage:,55 GB available space,Additional Notes:,Requires Steam activation and broadband internet connection for Multiplayer and SnapMap'
      schema:
        type: string
    original_price:
      name: original_price
      in: query
      description: Original price (USD)
      example: '$19.99'
      schema:
        type: string
    discount_price:
      name: discount_price
      in: query
      description: Discount price (USD)
      example: '$14.99'
      schema:
        type: string
  schemas:
    Review:
      title: Review
      type: object
      properties:
        review_id:
          type: number
          description: The unique id of the recommendation
          example: 85184605
        app_id:
          type: number
          description: The unique id of the app (game)
          example: 292030
        app_name:
          type: string
          description: The name of the app (game)
          example: 'The Witcher 3: Wild Hunt'
        language:
          type: string
          description: Language the user indicated when authoring the review
          example: 'english'
        review:
          type: string
          description: Text of written review
          example: 'One of the best RPGs of all time, worthy of any collection'
        timestamp_created:
          type: number
          description: Date the review was created (unix timestamp)
          example: 1611379970
        timestamp_updated:
          type: number
          description: Date the review was last updated (unix timestamp)
          example: 1611379970
        recommended:
          type: boolean
          description: TRUE if the user recommends the game
          example: true
        votes_helpful:
          type: number
          description: The number of users that found this review helpful
          example: 0
        votes_funny:
          type: number
          description: The number of users that found this review funny
          example: 0
        weighted_vote_score:
          type: number
          description: Helpfulness score
          example: 0.0
        comment_count:
          type: number
          description: Number of comments posted on this review
          example: 0
        steam_purchase:
          type: boolean
          description: TRUE if the user purchased the game on Steam
          example: true
        received_for_free:
          type: boolean
          description: TRUE if the user checked a box saying they got the app for free
          example: false
        written_during_early_access:
          type: boolean
          description: TRUE if the user posted this review while the game was in Early Access
          example: false
        author_steamid:
          type: number
          description: The user’s SteamID
          example: 76561199054755373
        author_num_games_owned:
          type: number
          description: Number of games owned by the user
          example: 5
        author_num_reviews:
          type: number
          description: Number of reviews written by the user
          example: 3
        author_playtime_forever:
          type: number
          description: Lifetime playtime tracked
          example: 5587.0
        author_playtime_last_two_weeks:
          type: number
          description: Playtime tracked in the past two weeks
          example: 3200.0
        author_playtime_at_review:
          type: number
          description: Playtime when the review was written
          example: 5524.0
        author_last_played:
          type: number
          description: Time for when the user last played
          example: 1611383744.0
    Game:
      title: Game
      type: object
      properties:
        url:
          type: string
          description: URL to the game on the steam store
          example: 'https://store.steampowered.com/app/379720/DOOM/'
        types:
          type: string
          description: Type of the product
          example: 'app'
        name:
          type: string
          description: Name of the game
          example: 'DOOM'
        desc_snippet:
          type: string
          description: Description of the game
          example: 'Now includes all three premium DLC packs (Unto the Evil, Hell Followed, and Bloodfall), maps, modes, and weapons, as well as all feature updates including Arcade Mode, Photo Mode, and the latest Update 6.66, which brings further multiplayer improvements as well as revamps multiplayer progression.'
        recent_reviews:
          type: string
          description: Recent reviews of the game
          example: 'Very Positive,(554),- 89% of the 554 user reviews in the last 30 days are positive.'
        all_reviews:
          type: string
          description: All reviews of the game
          example: 'Very Positive,(42,550),- 92% of the 42,550 user reviews for this game are positive.'
        release_date:
          type: string
          description: Date of release
          example: 'May 12, 2016'
        developer:
          type: string
          description: Developer name
          example: 'id Software'
        publisher:
          type: string
          description: Publisher name
          example: 'Bethesda Softworks,Bethesda Softworks'
        popular_tags:
          type: string
          description: All tags of the game
          example: 'FPS,Gore,Action,Demons,Shooter,First-Person,Great Soundtrack,Multiplayer,Singleplayer,Fast-Paced,Sci-fi,Horror,Classic,Atmospheric,Difficult,Blood,Remake,Zombies,Co-op,Memes'
        game_details:
          type: string
          description: Game details
          example: 'Single-player,Multi-player,Co-op,Steam Achievements,Steam Trading Cards,Partial Controller Support,Steam Cloud'
        languages:
          type: string
          description: All supported languages
          example: 'English,French,Italian,German,Spanish - Spain,Japanese,Polish,Portuguese - Brazil,Russian,Traditional Chinese'
        achievements:
          type: number
          description: Total number of achievements
          example: 54
        genre:
          type: string
          description: Game genre
          example: 'Action'
        game_description:
          type: string
          description: Description of the game
          example: 'About This Game Developed by id software, the studio that pioneered the first-person shooter genre and created multiplayer Deathmatch, DOOM returns as a brutally fun and challenging modern-day shooter experience. Relentless demons, impossibly destructive guns, and fast, fluid movement provide the foundation for intense, first-person combat – whether you’re obliterating demon hordes through the depths of Hell in the single-player campaign, or competing against your friends in numerous multiplayer modes. Expand your gameplay experience using DOOM SnapMap game editor to easily create, play, and share your content with the world. STORY: You’ve come here for a reason.'
        mature_content:
          type: string
          description: Mature Content Description
          example: 'The developers describe the content like this:  This Game may contain content not appropriate for all ages, or may not be appropriate for viewing at work: Frequent Violence or Gore, General Mature Content'
        minimum_requirements:
          type: string
          description: Specification of minimum requirements
          example: 'Minimum:,OS:,Windows 7/8.1/10 (64-bit versions),Processor:,Intel Core i5-2400/AMD FX-8320 or better,Memory:,8 GB RAM,Graphics:,NVIDIA GTX 670 2GB/AMD Radeon HD 7870 2GB or better,Storage:,55 GB available space,Additional Notes:,Requires Steam activation and broadband internet connection for Multiplayer and SnapMap'
        recommended_requirements:
          type: string
          description: Specification of recommended requirements
          example: 'Recommended:,OS:,Windows 7/8.1/10 (64-bit versions),Processor:,Intel Core i7-3770/AMD FX-8350 or better,Memory:,8 GB RAM,Graphics:,NVIDIA GTX 970 4GB/AMD Radeon R9 290 4GB or better,Storage:,55 GB available space,Additional Notes:,Requires Steam activation and broadband internet connection for Multiplayer and SnapMap'
        original_price:
          type: string
          description: Original price (USD)
          example: '$19.99'
        discount_price:
          type: string
          description: Discount price (USD)
          example: '$14.99'
    User:
      type: object
      required:
        - id
        - username
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        email:
          type: string
        password:
          type: string
    UserAdd:
      type: object
      required:
        - id
        - nickname
        - email
        - password
        - type
      properties:
        id:
          type: string
        nickname:
          type: string
        email:
          type: string
        password:
          type: string
        type:
          type: string
    UserEdit:
      type: object
      required:
        - new_password
        - nickname
        - new_email
        - password
        - type
      properties:
        new_password:
          type: string
        nickname:
          type: string
        new_email:
          type: string
        password:
          type: string
        type:
          type: string
    UserLogin:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
        password:
          type: string
    IdObject:
      type: object
      required:
        - id
        - password
      properties:
        id:
          type: string
    Response:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
