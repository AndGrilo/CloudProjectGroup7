syntax = "proto3";

message Game {
  string url = 1;
  string types = 2;
  string name = 3;
  string desc_snippet = 4;
  string recent_reviews = 5;
  string all_reviews = 6;
  string release_date = 7;
  string developer = 8;
  string publisher = 9;
  string popular_tags = 10;
  string game_details = 11;
  string languages = 12;
  string achievements = 13;
  string genre = 14;
  string game_description = 15;
  string mature_content = 16;
  string minimum_requirements = 17;
  string recommended_requirements = 18;
  string original_price = 19;
  string discount_price = 20;
  string _id = 21;

}

message Review{
  string review_id = 1;
  string app_id = 2;
  string app_name = 3;
  string language = 4;
  string review = 5;
  string timestamp_created = 6;
  string timestamp_updated = 7;
  string recommended = 8;
  string votes_helpful = 9;
  string votes_funny = 10;
  string weighted_vote_score = 11;
  string comment_count = 12;
  string steam_purchase = 13;
  string received_for_free = 14;
  string written_during_early_access = 15;
  string author_steamid = 16;
  string author_num_games_owned = 17;
  string author_num_reviews = 18;
  string author_playtime_forever = 19;
  string author_playtime_last_two_weeks = 20;
  string author_playtime_at_review = 21;
  string author_last_played = 22;
}

message SearchGamesRequest{
  string types = 1;
  string name = 2;
  string release_date = 3;
  string developer = 4;
  string publisher = 5;
  string popular_tags = 6;
  string languages = 7;
  string genre = 8;
  string original_price = 9;
}

message SearchGamesResponse{
  map<string, Game> games = 1;
}

message SearchGameRequest{
  string id = 1;
}

message SearchGameResponse{
  Game game = 1;
}

message SearchReviewsRequest{
  string app_name = 1;
  string timestamp_created = 2;
  string recommended = 3;
  string votes_helpful = 4;
  string votes_funny = 5;
  string comment_count = 6;
}


message SearchReviewsResponse{
  map<string, Review> reviews = 1;
}

message SearchReviewRequest{
  string id = 1;
}

message SearchReviewResponse{
  Review review = 1;
}


service Searches {
  rpc SearchGames (SearchGamesRequest) returns (SearchGamesResponse);
  rpc SearchGameById (SearchGameRequest) returns (SearchGameResponse);
  rpc SearchReviews (SearchReviewsRequest) returns (SearchReviewsResponse);
  rpc SearchReviewById (SearchReviewRequest) returns (SearchReviewResponse);
}




