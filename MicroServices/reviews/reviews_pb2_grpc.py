# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import reviews_pb2 as reviews__pb2
import util.util_pb2 as util__pb2


class ReviewsStub(object):
    """TODO: Add more messages related to review requests (Maybe? Needs discussion)

    Operations provided by Reviews service
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetReview = channel.unary_unary(
                '/Reviews/GetReview',
                request_serializer=reviews__pb2.GetReviewRequest.SerializeToString,
                response_deserializer=reviews__pb2.ReviewObject.FromString,
                )
        self.AddReview = channel.unary_unary(
                '/Reviews/AddReview',
                request_serializer=reviews__pb2.ReviewObject.SerializeToString,
                response_deserializer=reviews__pb2.ReviewObject.FromString,
                )
        self.UpdateReview = channel.unary_unary(
                '/Reviews/UpdateReview',
                request_serializer=reviews__pb2.ReviewObject.SerializeToString,
                response_deserializer=reviews__pb2.ReviewObject.FromString,
                )
        self.DeleteReview = channel.unary_unary(
                '/Reviews/DeleteReview',
                request_serializer=reviews__pb2.GetReviewRequest.SerializeToString,
                response_deserializer=util__pb2.SimpleResponse.FromString,
                )
        self.ListReviews = channel.unary_unary(
                '/Reviews/ListReviews',
                request_serializer=reviews__pb2.ListReviewsRequest.SerializeToString,
                response_deserializer=reviews__pb2.ListReviewsResponse.FromString,
                )


class ReviewsServicer(object):
    """TODO: Add more messages related to review requests (Maybe? Needs discussion)

    Operations provided by Reviews service
    """

    def GetReview(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddReview(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateReview(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteReview(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListReviews(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ReviewsServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetReview': grpc.unary_unary_rpc_method_handler(
                    servicer.GetReview,
                    request_deserializer=reviews__pb2.GetReviewRequest.FromString,
                    response_serializer=reviews__pb2.ReviewObject.SerializeToString,
            ),
            'AddReview': grpc.unary_unary_rpc_method_handler(
                    servicer.AddReview,
                    request_deserializer=reviews__pb2.ReviewObject.FromString,
                    response_serializer=reviews__pb2.ReviewObject.SerializeToString,
            ),
            'UpdateReview': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateReview,
                    request_deserializer=reviews__pb2.ReviewObject.FromString,
                    response_serializer=reviews__pb2.ReviewObject.SerializeToString,
            ),
            'DeleteReview': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteReview,
                    request_deserializer=reviews__pb2.GetReviewRequest.FromString,
                    response_serializer=util__pb2.SimpleResponse.SerializeToString,
            ),
            'ListReviews': grpc.unary_unary_rpc_method_handler(
                    servicer.ListReviews,
                    request_deserializer=reviews__pb2.ListReviewsRequest.FromString,
                    response_serializer=reviews__pb2.ListReviewsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Reviews', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Reviews(object):
    """TODO: Add more messages related to review requests (Maybe? Needs discussion)

    Operations provided by Reviews service
    """

    @staticmethod
    def GetReview(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Reviews/GetReview',
            reviews__pb2.GetReviewRequest.SerializeToString,
            reviews__pb2.ReviewObject.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddReview(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Reviews/AddReview',
            reviews__pb2.ReviewObject.SerializeToString,
            reviews__pb2.ReviewObject.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateReview(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Reviews/UpdateReview',
            reviews__pb2.ReviewObject.SerializeToString,
            reviews__pb2.ReviewObject.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteReview(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Reviews/DeleteReview',
            reviews__pb2.GetReviewRequest.SerializeToString,
            util__pb2.SimpleResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListReviews(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Reviews/ListReviews',
            reviews__pb2.ListReviewsRequest.SerializeToString,
            reviews__pb2.ListReviewsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
